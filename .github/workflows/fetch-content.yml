name: Fetch content

on:
  schedule:
    - cron: "0 23 * * SUN" # 毎週日曜日の23時（UTC）、日本時間で毎週月曜日の朝8時
  workflow_dispatch:

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.IT_TRIO_WEB_ACTIONS_TOKEN }}

      # withastro/action@v1と同じ設定にしてキャッシュを共有する
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: "latest"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "pnpm"
          cache-dependency-path: "./pnpm-lock.yaml"

      - name: Install
        shell: "bash"
        working-directory: "."
        run: pnpm install

      - name: Install Japanese fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-noto-cjk fonts-noto-cjk-extra

      - name: Store current episodes before fetch
        run: |
          # Store list of current episode GUIDs
          mkdir -p .tmp
          find src/content/episode -name "*.json" -exec basename {} .json \; | sort > .tmp/episodes_before.txt || touch .tmp/episodes_before.txt

      - name: Make changes to pull request
        run: pnpm run fetch

      - name: Detect new episodes and transcribe
        env:
          ASSEMBLYAI_API_KEY: ${{ secrets.ASSEMBLYAI_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Get list of episodes after fetch
          find src/content/episode -name "*.json" -exec basename {} .json \; | sort > .tmp/episodes_after.txt
          
          # Find new episodes (in after but not in before)
          comm -13 .tmp/episodes_before.txt .tmp/episodes_after.txt > .tmp/new_episodes.txt
          
          # Transcribe each new episode
          if [ -s .tmp/new_episodes.txt ]; then
            echo "Found new episodes. Starting transcription..."
            while IFS= read -r guid; do
              # Extract episode number from the GUID-named file
              episode_file="src/content/episode/${guid}.json"
              if [ -f "$episode_file" ]; then
                episode_number=$(node -p "JSON.parse(require('fs').readFileSync('$episode_file', 'utf8')).number")
                echo "Transcribing episode ${episode_number} (GUID: ${guid})..."
                
                # Run transcription
                pnpm run transcribe ${episode_number} || echo "Warning: Transcription failed for episode ${episode_number}"
              fi
            done < .tmp/new_episodes.txt
            
            # Format the transcription files
            pnpm format
          else
            echo "No new episodes found. Skipping transcription."
          fi

      - name: Generate OGP images for new episodes
        run: |
          # Create episode/ogp directory if it doesn't exist
          mkdir -p public/episode/ogp

          # Find all episode JSON files and generate OGP for each
          for file in src/content/episode/*.json; do
            if [ -f "$file" ]; then
              # Extract episode number from the JSON file
              episode_number=$(node -p "JSON.parse(require('fs').readFileSync('$file', 'utf8')).number")
              
              # Check if OGP already exists
              if [ ! -f "public/episode/ogp/${episode_number}.png" ]; then
                echo "Generating OGP for episode ${episode_number}..."
                pnpm run generate-ogp ${episode_number}
              else
                echo "OGP for episode ${episode_number} already exists, skipping..."
              fi
            fi
          done

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.IT_TRIO_WEB_ACTIONS_TOKEN }}
          commit-message: Update content
          committer: GitHub <noreply@github.com>
          author: GitHub <noreply@github.com>
          signoff: false
          branch: auto-fetch
          delete-branch: true
          title: "Auto Update from GitHub Actions"
          body: |
            This is an automatic pull request with the latest content updates.
            
            Changes may include:
            - New episode metadata
            - OGP images for new episodes
            - Automatic transcriptions for new episodes (with speaker identification and timestamps)
            
            If speaker names need to be updated in transcriptions, comment on this PR with:
            ```
            speaker おぐらくん ちーず なべちゃん
            ```
          labels: BOT
          draft: false
