---
import { getCollection, type CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import extractUUID from "../utils/extractUUID.ts";
import LinkifyText from "../components/LinkifyText.astro";
import ListenOn from "../components/ListenOn.astro";
import { generatePageTitle } from "../utils/pageTitle";
import Hatebu from "../components/Hatebu.astro";
import PostOnX from "../components/PostOnX.astro";
import Transcription from "../components/Transcription.astro";

type Props = CollectionEntry<"episode">["data"];

const uuid = extractUUID(Astro.props.url);

const episodes = (await getCollection("episode")).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const currentEpisodeIndex = episodes.findIndex((episode) => episode.data.guid === Astro.props.guid);
const episodeMetas = await getCollection("episodeMeta");
const episodeMeta = episodeMetas.find((meta) => meta.id === Astro.props.guid);
const prevEpisodeNumber = episodes[currentEpisodeIndex + 1]?.data.number;
const nextEpisodeNumber = episodes[currentEpisodeIndex - 1]?.data.number;

// Get transcription if available
const transcriptions = await getCollection("transcription");
const transcription = transcriptions.find((t) => t.id === Astro.props.guid);

const { title, description, pubDate, url, summary, spotifyEpisodeLink, applePodcastEpisodeLink, amazonMusicEpisodeLink, youtubeMusicEpisodeLink, youtubeEpisodeLink } = Astro.props;
const pageTitle = generatePageTitle(title);
const pageDescription = summary;
const ogImagePath = episodeMeta ? episodeMeta.data.ogImagePath : undefined;
---

<html lang="ja">
  <head>
    <BaseHead title={pageTitle} description={pageDescription} image={ogImagePath} />
    <link href="https://web-player.art19.com/assets/current.css" media="screen" rel="stylesheet" type="text/css" />
    <style>
      main {
        max-width: 960px;
        padding: 16px;
        width: 100%;
      }
      .player {
        display: grid;
        place-items: center;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .art19-web-player,
      div.art19-web-player {
        margin-bottom: 0;
      }
      .texts {
        max-width: 820px;
        margin: auto;
      }
      .date {
        text-align: center;
        color: rgb(var(--gray));
        margin-top: 12px;
        line-height: 1;
      }
      .title {
        text-align: center;
        line-height: 1.2;
        font-size: 1.5rem;
        margin-top: 12px;
      }
      .listenOn {
        margin-top: 12px;
      }
      .border {
        margin-top: 16px;
        margin-bottom: 16px;
      }
      .audio {
        margin: auto;
      }
      .description {
        font-size: 1rem;
        line-height: 1.4;
      }
      .next-prev {
        display: flex;
        justify-content: space-between;
        max-width: 820px;
        margin: 24px auto 0;

        a {
          font-size: 1rem;
          text-decoration: underline;
        }
      }
      .sns {
        display: grid;
        place-items: center;

        .border {
          width: 60px;
        }
        .icons {
          display: flex;
          gap: 12px;
          align-items: center;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <article>
        <div class="player">
          {
            uuid !== null ? (
              <div class="art19-web-player awp-artwork awp-theme-dark-custom" data-episode-id={uuid} data-primary-color="#2fb9f4" />
            ) : (
              <>
                <div class="hero-image">
                  <img src="/images/hero.jpg" alt="The Art of Product Podcast" />
                </div>
                <div>
                  <audio class="audio" src={url} controls />
                </div>
              </>
            )
          }
        </div>
      </article>
      <div class="texts">
        <div class="date">
          <FormattedDate date={pubDate} />
        </div>
        <h1 class="title">{title}</h1>
        <div class="listenOn">
          <ListenOn hideRSS spotifyEpisodeLink={spotifyEpisodeLink} applePodcastEpisodeLink={applePodcastEpisodeLink} amazonMusicEpisodeLink={amazonMusicEpisodeLink} youtubeMusicEpisodeLink={youtubeMusicEpisodeLink} youtubeEpisodeLink={youtubeEpisodeLink} />
        </div>
        <div class="sns">
          <hr class="border" />
          <div class="icons">
            <Hatebu />
            <PostOnX text={pageTitle} />
          </div>
        </div>
        <hr class="border" />
        <div>
          <div class="description">
            <LinkifyText text={description} />
          </div>
        </div>
        {transcription && <Transcription transcription={transcription.data} />}
      </div>
      <div class="next-prev">
        <div>
          {nextEpisodeNumber && <a href={`/episode/${nextEpisodeNumber}`}>次のエピソード</a>}
        </div>
        <div>
          {prevEpisodeNumber && <a href={`/episode/${prevEpisodeNumber}`}>前のエピソード</a>}
        </div>
      </div>
    </main>
    <Footer />
    <script is:inline src="https://web-player.art19.com/assets/current.js" type="text/javascript"></script>
  </body>
</html>
